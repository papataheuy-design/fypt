<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Panel Artikel & Berita Sederhana</title>
    
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <style>
        :root{--primary:#4361ee;--primary-light:#eef2ff;--secondary:#6c757d;--success:#28a745;--danger:#dc3545;--light:#f8f9fa;--dark:#343a40;--white:#ffffff;--border:#e0e0e0;--shadow:0 4px 12px rgba(0,0,0,0.08);--radius:12px;--transition:all 0.3s ease}
        *{box-sizing:border-box;margin:0;padding:0}
        body{font-family:'Inter',sans-serif;background:#f0f2f5;padding:0;margin:0;line-height:1.4;color:#333;font-weight:400}
        .container{max-width:100%;margin:0 auto;padding:10px}
        .box{background:var(--white);padding:10px;border-radius:var(--radius);box-shadow:var(--shadow);margin-bottom:8px;border:1px solid var(--border)}
        h3,h4{color:var(--dark);font-weight:600;margin-bottom:8px}
        h3{font-size:1.2rem}
        input,button,textarea{width:100%;padding:8px 10px;margin:8px 0;box-sizing:border-box;border-radius:8px;border:1px solid var(--border);font-family:'Inter',sans-serif;font-size:0.95rem}
        input,textarea{background:var(--white);color:var(--dark)}
        input:focus,textarea:focus{outline:none;border-color:var(--primary);box-shadow:0 0 0 3px rgba(67,97,238,0.15)}
        button{background:linear-gradient(145deg,var(--primary),#5473ff);color:var(--white);border:none;font-weight:600;cursor:pointer;padding:12px}
        button:hover{opacity:.9}
        .link-box{background:var(--primary-light);color:var(--primary);padding:10px;border-radius:8px;word-break:break-all;margin-top:10px;text-align:center;font-weight:500;box-shadow:inset 0 1px 3px rgba(0,0,0,0.05);font-size:0.9rem}
        .link-box a{color:var(--primary);text-decoration:none}
        .link-box a:hover{text-decoration:underline}
        .button-group{display:flex;gap:10px;margin-top:10px}
        .button-group button{flex:1}
        .btn-copy{background:var(--secondary)}
        .btn-open{background:var(--success)}
        #loading,#notif,#error{padding:12px;border-radius:8px;margin-top:15px;text-align:center;font-weight:500}
        #loading{display:none;background-color:rgba(0,0,0,0.05);color:var(--secondary)}
        #notif{display:none;background-color:rgba(40,167,69,0.1);color:var(--success)}
        #error{display:none;background-color:rgba(220,53,69,0.1);color:var(--danger)}
        small{color:var(--secondary);font-size:0.85rem;display:block;margin-bottom:10px}
        ol{padding-left:20px;margin:10px 0}
        ol li{margin-bottom:10px}
        .article-preview {
          padding: 15px;
          border-top: 1px solid var(--border);
          margin-top: 15px;
          text-align: left;
        }
        .article-preview h4 {
          margin-bottom: 10px;
          font-size: 1.2rem;
        }
        .article-preview img {
          max-width: 100%;
          height: auto;
          border-radius: 8px;
          margin-bottom: 15px;
        }
        .article-preview p {
          color: var(--secondary);
          line-height: 1.6;
          font-size: 0.95rem;
        }
        #user-id-display {
            font-size: 0.8em;
            color: #888;
            margin-top: 5px;
        }
        @media (max-width:520px){.container{padding:15px}.box{padding:20px}h3{font-size:1.3rem}input,button,textarea{padding:12px 14px}.button-group{flex-direction:column}}
        @media (max-width:360px){.container{padding:8px}.box{padding:15px}h3{font-size:1.1rem}input,button,textarea{padding:10px 12px;font-size:0.9rem}}
        @media (prefers-color-scheme:dark){body{background-color:#121212;color:#ffffff}.box{background-color:#1e1e1e;color:#ffffff;box-shadow:0 4px 12px rgba(0,0,0,.4);border:1px solid #ddd}h3,h4{color:#ffffff}input,button,textarea{background-color:#2c2c2c;color:#ffffff;border:1px solid #555}input:focus,textarea:focus{border-color:#5a74ff;box-shadow:0 0 0 3px rgba(90,116,255,.25)}.link-box{background-color:#3a4b99;color:#e0e0e0}#loading,#notif,#error{background-color:#333;color:#f0f0f0}.btn-copy{background:#555}.btn-open{background:#38c172}}
        @media (prefers-color-scheme:dark){
          .box,
          .box h3,
          .box h4,
          .box label,
          .box p,
          .box span {
            color:#fff !important;
          }
        }
    </style>
</head>
<body>

<div class="container">
    <div id="panel" class="box">
        <h3 id="panelTitle">Buat Link Artikel Baru</h3>
        <small id="panelSubtitle">üìå Tempel link artikel berita apa saja.</small>
        <span id="user-id-display"></span>
        <input id="articleLink" type="url" placeholder="Link Artikel Berita">

        <h4>Pengaturan Iklan & Redirect</h4>
        <input id="redirectLink" type="url" placeholder="Link Redirect/Tujuan">
        <input id="popupLink" type="url" placeholder="Link Pop-up (Opsional)">
        <textarea id="bannerCode" placeholder="Kode Iklan Banner (HTML/JS)"></textarea>

        <button id="saveButton" onclick="saveArticle()">Simpan</button>
        <div id="loading">‚è≥ Menyimpan...</div>
        <div id="notif">‚úÖ Link berhasil disimpan</div>
        <div id="error"></div>
    </div>
    
    <div id="previewBox" class="box" style="display:none;">
        <h3 id="previewTitle">Pratinjau Artikel</h3>
        <div id="articlePreview" class="article-preview">
            
        </div>
        <div id="share-area">
            <h3>Salin Link Publik</h3>
            <div class="link-box">
                <span id="public-link"></span>
            </div>
            <div class="button-group">
                <button class="btn-copy" onclick="copyLink()">Salin Tautan</button>
                <button class="btn-open" onclick="openLink()">Buka Link</button>
            </div>
        </div>
    </div>

    <div class="box">
        <h3>Cara Penggunaan üìù</h3>
        <ol>
            <li>Tempel link artikel berita.</li>
            <li>Isi link redirect, pop-up, dan kode banner.</li>
            <li>Klik <b>Simpan</b> ‚Üí muncul preview & link publik di bawah.</li>
            <li>Salin link publik untuk dibagikan.</li>
        </ol>
    </div>
</div>

<script type="module">
    import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.3/firebase-app.js";
    import { getAuth, signInAnonymously, signInWithCustomToken, onAuthStateChanged } from "https://www.gstatic.com/firebasejs/10.12.3/firebase-auth.js";
    import { getFirestore, doc, setDoc, getDoc, collection } from "https://www.gstatic.com/firebasejs/10.12.3/firebase-firestore.js";
    import { setLogLevel } from "https://www.gstatic.com/firebasejs/10.12.3/firebase-firestore.js";

    setLogLevel('debug');
    const loading = document.getElementById('loading');
    const notif = document.getElementById('notif');
    const errorBox = document.getElementById('error');
    const panelTitle = document.getElementById('panelTitle');
    const panelSubtitle = document.getElementById('panelSubtitle');
    const saveButton = document.getElementById('saveButton');
    const previewBox = document.getElementById('previewBox');
    const articlePreview = document.getElementById('articlePreview');
    const publicLinkSpan = document.getElementById('public-link');
    const userIdDisplay = document.getElementById('user-id-display');

    const appId = typeof __app_id !== 'undefined' ? __app_id : 'default-app-id';
    const firebaseConfig = JSON.parse(typeof __firebase_config !== 'undefined' ? __firebase_config : '{}');
    const initialAuthToken = typeof __initial_auth_token !== 'undefined' ? __initial_auth_token : null;

    let db;
    let auth;
    let userId = null;
    let articleDocRef;

    function isValidUrl(string) {
        try { new URL(string); return true; } catch (_) { return false; }
    }

    // Fungsi simulasi scraping artikel
    // NOTE: In a real application, scraping MUST be done on a server to avoid CORS issues.
    function fetchArticle(url) {
        return new Promise(resolve => {
            const dummyArticles = {
                'https://dummy-news.com/article1': {
                    title: 'Tiga Mitos Kesehatan yang Masih Dipercaya Banyak Orang',
                    image: 'https://placehold.co/600x400/1E90FF/FFFFFF?text=Ilustrasi+Artikel+1',
                    body: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.'
                },
                'https://dummy-news.com/article2': {
                    title: 'Teknologi AI Terbaru Mengubah Industri Kreatif',
                    image: 'https://placehold.co/600x400/FFA500/000000?text=Ilustrasi+Artikel+2',
                    body: 'Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Vestibulum tortor quam, feugiat vitae, ultricies eget, tempor sit amet, ante. Donec eu libero sit amet quam egestas semper. Aenean ultricies mi vitae est. Mauris placerat eleifend leo. Quisque sit amet est et sapien ullamcorper pharetra. Vestibulum erat wisi, condimentum sed, commodo vitae, ornare sit amet, wisi.'
                }
            };
            const articleData = dummyArticles[url] || {
                title: 'Artikel Tanpa Judul',
                image: 'https://placehold.co/600x400/808080/FFFFFF?text=Gambar+Tidak+Tersedia',
                body: 'Maaf, pratinjau artikel ini tidak dapat dimuat. Silakan cek tautannya dan coba lagi. (CATATAN: Di aplikasi nyata, scraping artikel harus dilakukan di server).'
            };
            resolve(articleData);
        });
    }

    function renderPreview(docData) {
        if (!docData) {
            previewBox.style.display = 'none';
            return;
        }

        const publicUrl = `${window.location.protocol}//${window.location.host}${window.location.pathname.replace('panel_artikel.html', 'page.html')}?id=${docData.id}`;
        publicLinkSpan.textContent = publicUrl;

        articlePreview.innerHTML = `
            <h4>${docData.scrapedContent.title}</h4>
            <img src="${docData.scrapedContent.image}" alt="Gambar Artikel"/>
            <p>${docData.scrapedContent.body}</p>
        `;
        previewBox.style.display = 'block';
    }

    async function checkAndSetUI() {
        if (!userId) return;

        try {
            const articleSnap = await getDoc(articleDocRef);
            if (articleSnap.exists()) {
                const docData = articleSnap.data();
                docData.id = articleSnap.id;
                panelTitle.textContent = "Update Artikel Anda";
                saveButton.textContent = "Update";
                document.getElementById('articleLink').value = docData.sourceLink;
                document.getElementById('redirectLink').value = docData.redirectLink;
                document.getElementById('popupLink').value = docData.popupLink || '';
                document.getElementById('bannerCode').value = docData.bannerCode || '';
                renderPreview(docData);
            }
        } catch (e) {
            console.error('Error fetching data:', e);
        }
    }

    window.saveArticle = async () => {
        if (!userId) {
            errorBox.textContent = "Autentikasi gagal. Silakan muat ulang halaman.";
            errorBox.style.display = 'block';
            return;
        }

        const articleLink = document.getElementById('articleLink').value.trim();
        const redirectLink = document.getElementById('redirectLink').value.trim();
        const popupLink = document.getElementById('popupLink').value.trim();
        const bannerCode = document.getElementById('bannerCode').value.trim();

        if(!articleLink || !redirectLink) { 
            errorBox.textContent = "Link Artikel dan Link Redirect harus diisi.";
            errorBox.style.display = 'block';
            return; 
        }
        if(!isValidUrl(articleLink) || !isValidUrl(redirectLink) || (popupLink && !isValidUrl(popupLink))) { 
            errorBox.textContent = "Pastikan tautan valid.";
            errorBox.style.display = 'block';
            return;
        }

        loading.style.display = 'block';
        notif.style.display = 'none';
        errorBox.style.display = 'none';
        saveButton.disabled = true;

        try {
            const scrapedContent = await fetchArticle(articleLink);
            
            const dataToStore = {
                sourceLink: articleLink,
                redirectLink,
                popupLink: popupLink || null,
                bannerCode: bannerCode || null,
                scrapedContent,
                timestamp: new Date().toISOString()
            };
            
            await setDoc(articleDocRef, dataToStore, { merge: true });
            console.log('Dokumen artikel diperbarui di Firestore.');
            
            notif.textContent = "‚úÖ Tautan berhasil disimpan.";
            notif.style.display = 'block';
            renderPreview({ ...dataToStore, id: articleDocRef.id });

        } catch (e) {
            console.error('saveArticle error:', e);
            errorBox.textContent = "Gagal menyimpan: " + e.message;
            errorBox.style.display = 'block';
        } finally {
            loading.style.display = 'none';
            saveButton.disabled = false;
        }
    };

    window.copyLink = () => {
        const publicUrl = publicLinkSpan.textContent;
        const textarea = document.createElement('textarea');
        textarea.value = publicUrl;
        document.body.appendChild(textarea);
        textarea.select();
        document.execCommand('copy');
        document.body.removeChild(textarea);
        alert('Tautan publik berhasil disalin!');
    };
    
    window.openLink = () => {
        const publicUrl = publicLinkSpan.textContent;
        window.open(publicUrl, '_blank');
    };

    async function initFirebaseAndCheckData() {
        if (Object.keys(firebaseConfig).length > 0) {
            const app = initializeApp(firebaseConfig);
            auth = getAuth(app);
            db = getFirestore(app);

            await new Promise(resolve => {
                const unsubscribe = onAuthStateChanged(auth, async (user) => {
                    if (user) {
                        userId = user.uid;
                        userIdDisplay.textContent = `User ID: ${userId}`;
                        articleDocRef = doc(collection(db, `/artifacts/${appId}/users/${userId}/articles`), 'article_post');
                        await checkAndSetUI();
                    } else {
                        await signInAnonymously(auth);
                    }
                    unsubscribe();
                    resolve();
                });
            });

            if (initialAuthToken) {
                 await signInWithCustomToken(auth, initialAuthToken);
            }
        }
    }

    initFirebaseAndCheckData();
</script>
</body>
</html>
